name: Project CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Stop if one step fails.
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and start containers
        run: docker compose -f ./compose_test.yaml up --build -d

      - name: Install dependencies and configure
        run: | # allows to run several commands
          docker compose -f ./compose_test.yaml exec api_test pip install -r requirements.txt
          docker compose -f ./compose_test.yaml exec api_test alembic upgrade head

      - name: Run tests with pytest
        run: docker compose -f ./compose_test.yaml exec pytest

      - name: Upload pytest report
        uses: actions/upload-artifact@v4
        with:
          name: pytest_report
          path: pytest_report.xml
        if: always() # this step is always executed to make sure report can be uploaded.

      - name: Run black
        run: docker compose -f ./compose_test.yaml exec black --check . > black_report.txt

      - name: Upload black report
        uses: actions/upload-artifact@v4
        with:
          name: black_report
          path: black_report.txt
        if: always() # this step is always executed to make sure report can be uploaded.

      - name: Run mypy
        run: docker compose -f ./compose_test.yaml exec mypy --junit-xml mypy_report.xml

      - name: Upload mypy report
        uses: actions/upload-artifact@v4
        with:
          name: mypy_report
          path: mypy_report.xml
        if: always() # this step is always executed to make sure report can be uploaded.

      - name: Remove containers
        run: docker compose -f ./compose_test.yaml down