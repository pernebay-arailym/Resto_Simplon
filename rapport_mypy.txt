app/schemas/user_schema.py:16: error: No overload variant of "Field" matches argument types "EllipsisType", "int"  [call-overload]
app/schemas/user_schema.py:16: note: Possible overload variants:
app/schemas/user_schema.py:16: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/user_schema.py:16: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/user_schema.py:16: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/user_schema.py:16: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/models/user.py:20: error: Name "Role" is not defined  [name-defined]
app/models/role.py:16: error: Name "User" is not defined  [name-defined]
app/crud/order_detail_crud.py:40: error: Incompatible return value type (got "None", expected "OrderDetail")  [return-value]
app/crud/order_detail_crud.py:53: error: Incompatible return value type (got "Sequence[OrderDetail]", expected "list[OrderDetail]")  [return-value]
app/crud/order_detail_crud.py:68: error: "type[OrderDetail]" has no attribute "client_id"  [attr-defined]
app/crud/order_detail_crud.py:72: error: Incompatible return value type (got "OrderDetail | None", expected "OrderDetail")  [return-value]
app/crud/order_detail_crud.py:90: error: Incompatible return value type (got "None", expected "OrderDetail")  [return-value]
app/crud/order_detail_crud.py:130: error: Incompatible return value type (got "Sequence[OrderDetail]", expected "list[OrderDetail]")  [return-value]
app/crud/user_crud.py:22: error: Item "int" of "int | None" has no attribute "in_"  [union-attr]
app/crud/user_crud.py:22: error: Item "None" of "int | None" has no attribute "in_"  [union-attr]
app/crud/user_crud.py:27: error: Incompatible types in assignment (expression has type "Sequence[Role]", variable has type "list[Any]")  [assignment]
app/crud/user_crud.py:36: error: Incompatible return value type (got "User | None", expected "User")  [return-value]
app/crud/user_crud.py:41: error: Incompatible return value type (got "Sequence[User]", expected "list[User]")  [return-value]
app/crud/user_crud.py:47: error: Incompatible return value type (got "User | None", expected "User")  [return-value]
app/crud/user_crud.py:88: error: Incompatible return value type (got "Sequence[OrderBase]", expected "list[OrderPublic]")  [return-value]
app/crud/order_crud.py:38: error: Incompatible return value type (got "None", expected "OrderBase")  [return-value]
app/crud/order_crud.py:51: error: Incompatible return value type (got "Sequence[OrderBase]", expected "list[OrderBase]")  [return-value]
app/crud/order_crud.py:67: error: Incompatible return value type (got "OrderBase | None", expected "OrderBase")  [return-value]
app/crud/order_crud.py:82: error: "datetime" has no attribute "between"  [attr-defined]
app/crud/order_crud.py:84: error: Incompatible return value type (got "Sequence[OrderBase]", expected "list[OrderBase]")  [return-value]
app/crud/order_crud.py:100: error: Incompatible return value type (got "None", expected "OrderBase")  [return-value]
app/crud/order_crud.py:145: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
app/auth/auth_handler.py:22: error: Returning Any from function declared to return "dict[str, str]"  [no-any-return]
app/auth/auth_handler.py:25: error: Function "builtins.any" is not valid as a type  [valid-type]
app/auth/auth_handler.py:25: note: Perhaps you meant "typing.Any" instead of "any"?
app/auth/auth_handler.py:31: error: Returning Any from function declared to return "dict[any?, any?] | None"  [no-any-return]
app/auth/auth_bearer.py:21: error: Incompatible types in assignment (expression has type "HTTPAuthorizationCredentials | None", variable has type "HTTPAuthorizationCredentials")  [assignment]
app/auth/auth_bearer.py:54: error: Item "None" of "Any | None" has no attribute "__iter__" (not iterable)  [union-attr]
app/api/routes/user.py:34: error: Item "None" of "list[int] | None" has no attribute "__iter__" (not iterable)  [union-attr]
app/api/routes/user.py:95: error: Item "None" of "Role | None" has no attribute "id"  [union-attr]
app/api/routes/user.py:147: error: Argument "email" to "get_user_by_email" has incompatible type "str | None"; expected "str"  [arg-type]
app/api/routes/role.py:11: error: Incompatible return value type (got "list[Role]", expected "list[RolePublic]")  [return-value]
app/api/routes/role.py:53: error: Module has no attribute "update_crud"  [attr-defined]
app/api/routes/order_detail.py:102: error: Argument "order_detail_update" to "update_order_detail" has incompatible type "OrderDetailCreate"; expected "OrderDetailUpdate"  [arg-type]
Found 34 errors in 11 files (checked 41 source files)
