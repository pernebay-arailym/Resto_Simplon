"""refactoring enums and user role

Revision ID: 499b16e1debc
Revises: feb25c428031
Create Date: 2025-08-11 08:16:06.755854

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '499b16e1debc'
down_revision: Union[str, Sequence[str], None] = 'feb25c428031'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('CREATED', 'PREPARING', 'READY', 'SERVED', 'CANCELLED', 'PAID', name='orderstatus'),
               nullable=False)

    with op.batch_alter_table('orderdetail', schema=None) as batch_op:
        batch_op.alter_column('order_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('CREATED', 'PREPARING', 'READY', 'SERVED', 'CANCELLED', name='orderdetailstatus'),
               nullable=False)

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('role_type',
               existing_type=postgresql.ENUM('admin', 'employee', 'customer', name='roletype'),
               nullable=False)
        batch_op.create_unique_constraint(None, ['role_type'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('role_type',
               existing_type=postgresql.ENUM('admin', 'employee', 'customer', name='roletype'),
               nullable=True)

    with op.batch_alter_table('orderdetail', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('CREATED', 'PREPARING', 'READY', 'SERVED', 'CANCELLED', name='orderdetailstatus'),
               nullable=True)
        batch_op.alter_column('order_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('CREATED', 'PREPARING', 'READY', 'SERVED', 'CANCELLED', 'PAID', name='orderstatus'),
               nullable=True)

    # ### end Alembic commands ###
